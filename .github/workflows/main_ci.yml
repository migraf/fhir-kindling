# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: # This configuration does not affect the page_build event above
      - created
jobs:
  test:

    runs-on: ubuntu-latest
    environment: CI

    services:
      hapi:
        image: "hapiproject/hapi:latest"
        ports:
          - "8082:8080"
        env:
          hapi.fhir.default_encoding: json
          hapi.fhir.: json
          hapi.fhir.server_address: "http://localhost:8082/fhir"

        options: >
          --health-cmd curl http://localhost:8080/fhir/metadata
          --health-interval 10s
          --health-timeout 30s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Install pipenv
        run: pipx install pipenv
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          cache: "pipenv"
      - run: pipenv install --dev
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          pipenv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          pipenv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Tests and coverage report
        env:
          FHIR_API_URL: ${{ secrets.BLAZE_API_URL }}
          CLIENT_ID: ${{ secrets.KEYCLOAK_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.KEYCLOAK_CLIENT_SECRET }}
          OIDC_PROVIDER_URL: ${{ secrets.KEYCLOAK_PROVIDER_URL }}
        run: |
          pipenv run coverage run -m pytest tests
          pipenv run coverage xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          name: codecov-umbrella
          verbose: true

      - name: Build and deploy documentation
        run: pipenv run mkdocs gh-deploy --force
